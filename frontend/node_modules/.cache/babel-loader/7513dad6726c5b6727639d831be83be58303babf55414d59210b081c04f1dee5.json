{"ast":null,"code":"var _jsxFileName = \"/Users/tomkwong/CascadeProjects/yield-curve-viewer/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst API_BASE = 'http://localhost:4000/api';\nfunction App() {\n  _s();\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [curve, setCurve] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Fetch dates\n  useEffect(() => {\n    setError('');\n    fetch(`${API_BASE}/dates`).then(async res => {\n      if (!res.ok) throw new Error('Failed to fetch dates');\n      return res.json();\n    }).then(data => {\n      console.log('Fetched dates:', data.dates);\n      setDates(data.dates);\n      if (data.dates && data.dates.length > 0) {\n        setSelectedDate(data.dates[0]);\n      } else {\n        setError('No dates found.');\n      }\n    }).catch(err => {\n      console.error('Error loading dates:', err);\n      setError('Error loading dates: ' + err.message);\n      setDates([]);\n    });\n  }, []);\n\n  // Fetch curve for selected date\n  useEffect(() => {\n    if (!selectedDate) return;\n    setLoading(true);\n    setError('');\n    fetch(`${API_BASE}/yield-curve?date=${encodeURIComponent(selectedDate)}`).then(async res => {\n      if (!res.ok) {\n        const errJson = await res.json().catch(() => ({}));\n        throw new Error(errJson.error || 'Failed to fetch yield curve');\n      }\n      return res.json();\n    }).then(data => {\n      setCurve(data.curve || []);\n      setLoading(false);\n    }).catch(err => {\n      setError('Error loading yield curve: ' + err.message);\n      setCurve([]);\n      setLoading(false);\n    });\n  }, [selectedDate, dates]);\n\n  // Helper to convert maturity label to months\n  function maturityToMonths(label) {\n    const moMatch = label.match(/([\\d.]+)\\s*Mo/i);\n    if (moMatch) return parseFloat(moMatch[1]);\n    const yrMatch = label.match(/([\\d.]+)\\s*YR/i);\n    if (yrMatch) return parseFloat(yrMatch[1]) * 12;\n    return null;\n  }\n\n  // Prepare data for linear x-axis (months)\n  const chartData = {\n    datasets: [{\n      label: `Yield Curve (${selectedDate})`,\n      data: curve.map(pt => ({\n        x: maturityToMonths(pt.maturity.replace(/Month/i, 'Mo')),\n        y: pt.rate,\n        maturity: pt.maturity.replace(/Month/i, 'Mo')\n      })),\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 700,\n      margin: '40px auto',\n      fontFamily: 'sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"US Treasury Yield Curve Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), dates.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No dates available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Date:\", ' ', /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value),\n        style: {\n          fontSize: '1rem',\n          margin: '0 10px'\n        },\n        children: dates.map(date => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: date,\n          children: date\n        }, date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true,\n        parsing: false,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          title: {\n            display: true,\n            text: 'Yield Curve'\n          },\n          tooltip: {\n            callbacks: {\n              title: items => items[0].raw.maturity,\n              label: item => `Rate: ${item.raw.y}`\n            }\n          }\n        },\n        scales: {\n          x: {\n            type: 'linear',\n            title: {\n              display: true,\n              text: 'Maturity',\n              font: {\n                size: 14\n              }\n            },\n            // Explicitly set ticks at data points\n            ticks: {\n              values: chartData.datasets[0].data.map(d => d.x),\n              callback: function (val, idx) {\n                const data = chartData.datasets[0].data;\n                const match = data.find(d => d.x === val);\n                return match ? match.maturity : '';\n              },\n              autoSkip: false\n            },\n            min: 0\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'Treasury Par Rate',\n              font: {\n                size: 14\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MLaeS8zrPFodOrawl5KgVJ1i2WI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","API_BASE","App","_s","dates","setDates","selectedDate","setSelectedDate","curve","setCurve","loading","setLoading","error","setError","fetch","then","res","ok","Error","json","data","console","log","length","catch","err","message","encodeURIComponent","errJson","maturityToMonths","label","moMatch","match","parseFloat","yrMatch","chartData","datasets","map","pt","x","maturity","replace","y","rate","fill","borderColor","tension","style","maxWidth","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","color","marginBottom","value","onChange","e","target","fontSize","date","options","responsive","parsing","plugins","legend","position","title","display","text","tooltip","callbacks","items","raw","item","scales","type","font","size","ticks","values","d","callback","val","idx","find","autoSkip","min","beginAtZero","_c","$RefreshReg$"],"sources":["/Users/tomkwong/CascadeProjects/yield-curve-viewer/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst API_BASE = 'http://localhost:4000/api';\n\nfunction App() {\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [curve, setCurve] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Fetch dates\n  useEffect(() => {\n    setError('');\n    fetch(`${API_BASE}/dates`)\n      .then(async res => {\n        if (!res.ok) throw new Error('Failed to fetch dates');\n        return res.json();\n      })\n      .then(data => {\n        console.log('Fetched dates:', data.dates);\n        setDates(data.dates);\n        if (data.dates && data.dates.length > 0) {\n          setSelectedDate(data.dates[0]);\n        } else {\n          setError('No dates found.');\n        }\n      })\n      .catch(err => {\n        console.error('Error loading dates:', err);\n        setError('Error loading dates: ' + err.message);\n        setDates([]);\n      });\n  }, []);\n\n  // Fetch curve for selected date\n  useEffect(() => {\n    if (!selectedDate) return;\n    setLoading(true);\n    setError('');\n    fetch(`${API_BASE}/yield-curve?date=${encodeURIComponent(selectedDate)}`)\n      .then(async res => {\n        if (!res.ok) {\n          const errJson = await res.json().catch(() => ({}));\n          throw new Error(errJson.error || 'Failed to fetch yield curve');\n        }\n        return res.json();\n      })\n      .then(data => {\n        setCurve(data.curve || []);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError('Error loading yield curve: ' + err.message);\n        setCurve([]);\n        setLoading(false);\n      });\n  }, [selectedDate, dates]);\n\n  // Helper to convert maturity label to months\n  function maturityToMonths(label) {\n    const moMatch = label.match(/([\\d.]+)\\s*Mo/i);\n    if (moMatch) return parseFloat(moMatch[1]);\n    const yrMatch = label.match(/([\\d.]+)\\s*YR/i);\n    if (yrMatch) return parseFloat(yrMatch[1]) * 12;\n    return null;\n  }\n\n  // Prepare data for linear x-axis (months)\n  const chartData = {\n    datasets: [\n      {\n        label: `Yield Curve (${selectedDate})`,\n        data: curve.map(pt => ({\n          x: maturityToMonths(pt.maturity.replace(/Month/i, 'Mo')),\n          y: pt.rate,\n          maturity: pt.maturity.replace(/Month/i, 'Mo'),\n        })),\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1,\n      },\n    ],\n  };\n\n\n  return (\n    <div style={{ maxWidth: 700, margin: '40px auto', fontFamily: 'sans-serif' }}>\n      <h2>US Treasury Yield Curve Viewer</h2>\n      {error && (\n        <div style={{ color: 'red', marginBottom: 16 }}>\n          <b>Error:</b> {error}\n        </div>\n      )}\n      {dates.length === 0 ? (\n        <div>No dates available.</div>\n      ) : (\n        <label>\n          Select Date:{' '}\n          <select\n            value={selectedDate}\n            onChange={e => setSelectedDate(e.target.value)}\n            style={{ fontSize: '1rem', margin: '0 10px' }}\n          >\n            {dates.map(date => (\n              <option key={date} value={date}>{date}</option>\n            ))}\n          </select>\n        </label>\n      )}\n      {loading ? (\n        <div>Loading chart...</div>\n      ) : (\n        <Line data={chartData} options={{\n          responsive: true,\n          parsing: false,\n          plugins: {\n            legend: { position: 'top' },\n            title: { display: true, text: 'Yield Curve' },\n            tooltip: {\n              callbacks: {\n                title: (items) => items[0].raw.maturity,\n                label: (item) => `Rate: ${item.raw.y}`\n              }\n            }\n          },\n          scales: {\n            x: {\n              type: 'linear',\n              title: {\n                display: true,\n                text: 'Maturity',\n                font: { size: 14 }\n              },\n              // Explicitly set ticks at data points\n              ticks: {\n                values: chartData.datasets[0].data.map(d => d.x),\n                callback: function(val, idx) {\n                  const data = chartData.datasets[0].data;\n                  const match = data.find(d => d.x === val);\n                  return match ? match.maturity : '';\n                },\n                autoSkip: false\n              },\n              min: 0\n            },\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Treasury Par Rate',\n                font: { size: 14 }\n              }\n            }\n          }\n        }} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
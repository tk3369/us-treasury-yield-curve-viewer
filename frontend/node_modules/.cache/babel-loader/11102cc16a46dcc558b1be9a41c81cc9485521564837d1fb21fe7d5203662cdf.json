{"ast":null,"code":"var _jsxFileName = \"/Users/tomkwong/CascadeProjects/yield-curve-viewer/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst API_BASE = 'http://localhost:4000/api';\nconst ANIMATION_DELAY = 100;\nfunction App() {\n  _s();\n  var _filteredCurve;\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [curve, setCurve] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [animating, setAnimating] = useState(false);\n\n  // Animate through all dates\n  async function animateCurve() {\n    if (dates.length === 0) return;\n    // Sort dates ascending for animation\n    const sortedDates = [...dates].sort();\n    setAnimating(true);\n    for (let i = 0; i < sortedDates.length; i++) {\n      setSelectedDate(sortedDates[i]);\n      await new Promise(res => setTimeout(res, ANIMATION_DELAY));\n    }\n    setAnimating(false);\n  }\n\n  // Fetch dates\n  useEffect(() => {\n    setError('');\n    fetch(`${API_BASE}/dates`).then(async res => {\n      if (!res.ok) throw new Error('Failed to fetch dates');\n      return res.json();\n    }).then(data => {\n      console.log('Fetched dates:', data.dates);\n      setDates(data.dates);\n      if (data.dates && data.dates.length > 0) {\n        setSelectedDate(data.dates[0]);\n      } else {\n        setError('No dates found.');\n      }\n    }).catch(err => {\n      console.error('Error loading dates:', err);\n      setError('Error loading dates: ' + err.message);\n      setDates([]);\n    });\n  }, []);\n\n  // Fetch curve for selected date\n  useEffect(() => {\n    if (!selectedDate) return;\n    setLoading(true);\n    setError('');\n    fetch(`${API_BASE}/yield-curve?date=${encodeURIComponent(selectedDate)}`).then(async res => {\n      if (!res.ok) {\n        const errJson = await res.json().catch(() => ({}));\n        throw new Error(errJson.error || 'Failed to fetch yield curve');\n      }\n      return res.json();\n    }).then(data => {\n      setCurve(data.curve || []);\n      setLoading(false);\n    }).catch(err => {\n      setError('Error loading yield curve: ' + err.message);\n      setCurve([]);\n      setLoading(false);\n    });\n  }, [selectedDate, dates]);\n\n  // Helper to convert maturity label to months and to date\n  function maturityToMonths(label) {\n    const mo = label.match(/([\\d.]+)\\s*Mo/i);\n    if (mo) return parseFloat(mo[1]);\n    const yr = label.match(/([\\d.]+)\\s*YR/i);\n    if (yr) return parseFloat(yr[1]) * 12;\n    return null;\n  }\n  function maturityToDate(label) {\n    const base = new Date(2000, 0, 1);\n    const months = maturityToMonths(label.replace(/Month/i, 'Mo'));\n    if (months == null) return null;\n    const d = new Date(base);\n    d.setMonth(d.getMonth() + months);\n    return d;\n  }\n\n  // Filter out the first few maturities\n  // Remove first few maturities (1 Mo, 1.5 Mo, 2 Mo, 3 Mo, 4 Mo)\n  // Remove first few maturities (1 Mo, 1.5 Mo, 1.5 Month, 2 Mo, 3 Mo, 4 Mo)\n  // Remove first few maturities (1 Mo, 1.5 Mo, 1.5 Month, 2 Mo, 3 Mo, 4 Mo, 1 Yr)\n  const filteredCurve = curve.filter(pt => !/^([1]|2|3|4)\\s*mo$/i.test(pt.maturity.trim()) && !/^1\\.5\\s*(mo|month)$/i.test(pt.maturity.trim()) && !/^1\\s*yr$/i.test(pt.maturity.trim()));\n  console.log(\"filtered curve\");\n  console.log(filteredCurve);\n  const chartData = {\n    datasets: [{\n      label: `Yield Curve (${selectedDate})`,\n      data: filteredCurve.map(pt => ({\n        x: maturityToDate(pt.maturity),\n        y: pt.rate,\n        maturity: pt.maturity\n      })),\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      cubicInterpolationMode: 'monotone'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 700,\n      margin: '40px auto',\n      fontFamily: 'sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"US Treasury Yield Curve Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), dates.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No dates available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 12,\n        marginBottom: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Date:\", ' ', /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate,\n          onChange: e => setSelectedDate(e.target.value),\n          style: {\n            fontSize: '1rem',\n            margin: '0 10px'\n          },\n          disabled: animating,\n          children: [...dates].sort().map(date => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: date,\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: animateCurve,\n        disabled: animating || dates.length === 0,\n        style: {\n          fontSize: '1rem',\n          padding: '4px 16px',\n          cursor: animating ? 'not-allowed' : 'pointer'\n        },\n        children: animating ? 'Animating...' : 'Animate Curve'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true,\n        animation: animating ? false : undefined,\n        plugins: {\n          legend: {\n            display: false\n          },\n          title: {\n            display: false\n          },\n          tooltip: {\n            callbacks: {\n              title: items => items[0].raw.maturity,\n              label: item => `Rate: ${item.raw.y}`\n            }\n          }\n        },\n        scales: {\n          x: {\n            type: 'time',\n            time: {\n              unit: 'month',\n              displayFormats: {\n                month: 'MMM yyyy'\n              }\n            },\n            title: {\n              display: true,\n              text: 'Maturity',\n              font: {\n                size: 14\n              }\n            },\n            ticks: {\n              source: 'data',\n              autoSkip: false,\n              callback: function (val) {\n                const match = chartData.datasets[0].data.find(d => d.x.getTime() === new Date(val).getTime());\n                return match ? match.maturity : '';\n              },\n              minRotation: 45,\n              maxRotation: 45\n            },\n            grid: {\n              display: true,\n              drawTicks: true,\n              borderColor: \"transparent\",\n              //horizontal line color above ticks (x-axis)\n              color: \"transparent\",\n              //grid lines color\n              tickColor: \"#868e96\" //ticks color (little line above points)\n            },\n            min: new Date(2000, 0, 1),\n            max: maturityToDate(((_filteredCurve = filteredCurve[filteredCurve.length - 1]) === null || _filteredCurve === void 0 ? void 0 : _filteredCurve.maturity) || '')\n          },\n          y: {\n            beginAtZero: true,\n            min: 0,\n            max: 8.0,\n            title: {\n              display: true,\n              text: 'Treasury Par Rate',\n              font: {\n                size: 14\n              }\n            },\n            grid: {\n              display: true,\n              drawTicks: true,\n              borderColor: \"transparent\",\n              //horizontal line color above ticks (x-axis)\n              color: \"transparent\",\n              //grid lines color\n              tickColor: \"#868e96\" //ticks color (little line above points)\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"inG/9hYSNBpb+YBryrIvRtBDtFc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","jsxDEV","_jsxDEV","register","API_BASE","ANIMATION_DELAY","App","_s","_filteredCurve","dates","setDates","selectedDate","setSelectedDate","curve","setCurve","loading","setLoading","error","setError","animating","setAnimating","animateCurve","length","sortedDates","sort","i","Promise","res","setTimeout","fetch","then","ok","Error","json","data","console","log","catch","err","message","encodeURIComponent","errJson","maturityToMonths","label","mo","match","parseFloat","yr","maturityToDate","base","Date","months","replace","d","setMonth","getMonth","filteredCurve","filter","pt","test","maturity","trim","chartData","datasets","map","x","y","rate","fill","borderColor","cubicInterpolationMode","style","maxWidth","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","color","marginBottom","display","alignItems","gap","value","onChange","e","target","fontSize","disabled","date","onClick","padding","cursor","options","responsive","animation","undefined","plugins","legend","title","tooltip","callbacks","items","raw","item","scales","type","time","unit","displayFormats","month","text","font","size","ticks","source","autoSkip","callback","val","find","getTime","minRotation","maxRotation","grid","drawTicks","tickColor","min","max","beginAtZero","_c","$RefreshReg$"],"sources":["/Users/tomkwong/CascadeProjects/yield-curve-viewer/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport 'chartjs-adapter-date-fns';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nconst API_BASE = 'http://localhost:4000/api';\n\nconst ANIMATION_DELAY = 100;\n\nfunction App() {\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [curve, setCurve] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [animating, setAnimating] = useState(false);\n\n  // Animate through all dates\n  async function animateCurve() {\n    if (dates.length === 0) return;\n    // Sort dates ascending for animation\n    const sortedDates = [...dates].sort();\n    setAnimating(true);\n    for (let i = 0; i < sortedDates.length; i++) {\n      setSelectedDate(sortedDates[i]);\n      await new Promise(res => setTimeout(res, ANIMATION_DELAY));\n    }\n    setAnimating(false);\n  }\n\n  // Fetch dates\n  useEffect(() => {\n    setError('');\n    fetch(`${API_BASE}/dates`)\n      .then(async res => {\n        if (!res.ok) throw new Error('Failed to fetch dates');\n        return res.json();\n      })\n      .then(data => {\n        console.log('Fetched dates:', data.dates);\n        setDates(data.dates);\n        if (data.dates && data.dates.length > 0) {\n          setSelectedDate(data.dates[0]);\n        } else {\n          setError('No dates found.');\n        }\n      })\n      .catch(err => {\n        console.error('Error loading dates:', err);\n        setError('Error loading dates: ' + err.message);\n        setDates([]);\n      });\n  }, []);\n\n  // Fetch curve for selected date\n  useEffect(() => {\n    if (!selectedDate) return;\n    setLoading(true);\n    setError('');\n    fetch(`${API_BASE}/yield-curve?date=${encodeURIComponent(selectedDate)}`)\n      .then(async res => {\n        if (!res.ok) {\n          const errJson = await res.json().catch(() => ({}));\n          throw new Error(errJson.error || 'Failed to fetch yield curve');\n        }\n        return res.json();\n      })\n      .then(data => {\n        setCurve(data.curve || []);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError('Error loading yield curve: ' + err.message);\n        setCurve([]);\n        setLoading(false);\n      });\n  }, [selectedDate, dates]);\n\n  // Helper to convert maturity label to months and to date\n  function maturityToMonths(label) {\n    const mo = label.match(/([\\d.]+)\\s*Mo/i);\n    if (mo) return parseFloat(mo[1]);\n    const yr = label.match(/([\\d.]+)\\s*YR/i);\n    if (yr) return parseFloat(yr[1]) * 12;\n    return null;\n  }\n  function maturityToDate(label) {\n    const base = new Date(2000, 0, 1);\n    const months = maturityToMonths(label.replace(/Month/i,'Mo'));\n    if (months == null) return null;\n    const d = new Date(base);\n    d.setMonth(d.getMonth() + months);\n    return d;\n  }\n\n  // Filter out the first few maturities\n  // Remove first few maturities (1 Mo, 1.5 Mo, 2 Mo, 3 Mo, 4 Mo)\n  // Remove first few maturities (1 Mo, 1.5 Mo, 1.5 Month, 2 Mo, 3 Mo, 4 Mo)\n  // Remove first few maturities (1 Mo, 1.5 Mo, 1.5 Month, 2 Mo, 3 Mo, 4 Mo, 1 Yr)\n  const filteredCurve = curve.filter(pt =>\n    !/^([1]|2|3|4)\\s*mo$/i.test(pt.maturity.trim()) &&\n    !/^1\\.5\\s*(mo|month)$/i.test(pt.maturity.trim()) &&\n    !/^1\\s*yr$/i.test(pt.maturity.trim())\n  );\n  console.log(\"filtered curve\");\n  console.log(filteredCurve);\n\n  const chartData = {\n    datasets: [\n      {\n        label: `Yield Curve (${selectedDate})`,\n        data: filteredCurve.map(pt => ({ x: maturityToDate(pt.maturity), y: pt.rate, maturity: pt.maturity })),\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        cubicInterpolationMode: 'monotone',\n      }\n    ]\n  };\n\n  return (\n    <div style={{ maxWidth: 700, margin: '40px auto', fontFamily: 'sans-serif' }}>\n      <h2>US Treasury Yield Curve Viewer</h2>\n      {error && (\n        <div style={{ color: 'red', marginBottom: 16 }}>\n          <b>Error:</b> {error}\n        </div>\n      )}\n      {dates.length === 0 ? (\n        <div>No dates available.</div>\n      ) : (\n        <div style={{ display: 'flex', alignItems: 'center', gap: 12, marginBottom: 12 }}>\n          <label>\n            Select Date:{' '}\n            <select\n              value={selectedDate}\n              onChange={e => setSelectedDate(e.target.value)}\n              style={{ fontSize: '1rem', margin: '0 10px' }}\n              disabled={animating}\n            >\n              {[...dates].sort().map(date => (\n                <option key={date} value={date}>{date}</option>\n              ))}\n            </select>\n          </label>\n          <button\n            onClick={animateCurve}\n            disabled={animating || dates.length === 0}\n            style={{ fontSize: '1rem', padding: '4px 16px', cursor: animating ? 'not-allowed' : 'pointer' }}\n          >\n            {animating ? 'Animating...' : 'Animate Curve'}\n          </button>\n        </div>\n      )}\n      {loading ? (\n        <div>Loading chart...</div>\n      ) : (\n        <Line data={chartData} options={{\n          responsive: true,\n          animation: animating ? false : undefined,\n          plugins: {\n            legend: { display: false },\n            title: { display: false },\n            tooltip: {\n              callbacks: { title: items => items[0].raw.maturity, label: item => `Rate: ${item.raw.y}` }\n            }\n          },\n          scales: {\n            x: {\n              type: 'time',\n              time: { unit: 'month', displayFormats: { month: 'MMM yyyy' } },\n              title: { display: true, text: 'Maturity', font: { size: 14 } },\n              ticks: {\n                source: 'data',\n                autoSkip: false,\n                callback: function(val) {\n                  const match = chartData.datasets[0].data.find(d => d.x.getTime() === new Date(val).getTime());\n                  return match ? match.maturity : '';\n                },\n                minRotation: 45,\n                maxRotation: 45\n              },\n              grid: {\n                display: true,\n                drawTicks: true,  \n                borderColor: \"transparent\", //horizontal line color above ticks (x-axis)\n                color: \"transparent\",   //grid lines color\n                tickColor: \"#868e96\"  //ticks color (little line above points)\n              },\n              min: new Date(2000, 0, 1),\n              max: maturityToDate(filteredCurve[filteredCurve.length-1]?.maturity || '' )\n            },\n            y: {\n              beginAtZero: true,\n              min: 0,\n              max: 8.0,\n              title: { display: true, text: 'Treasury Par Rate', font: { size: 14 } },\n              grid: {\n                display: true,\n                drawTicks: true,  \n                borderColor: \"transparent\", //horizontal line color above ticks (x-axis)\n                color: \"transparent\",   //grid lines color\n                tickColor: \"#868e96\"  //ticks color (little line above points)\n              },\n            }\n          }\n        }} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,SAAS,QACJ,UAAU;AACjB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElCV,OAAO,CAACW,QAAQ,CACdV,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,SACF,CAAC;AAED,MAAMI,QAAQ,GAAG,2BAA2B;AAE5C,MAAMC,eAAe,GAAG,GAAG;AAE3B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,cAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,eAAegC,YAAYA,CAAA,EAAG;IAC5B,IAAIZ,KAAK,CAACa,MAAM,KAAK,CAAC,EAAE;IACxB;IACA,MAAMC,WAAW,GAAG,CAAC,GAAGd,KAAK,CAAC,CAACe,IAAI,CAAC,CAAC;IACrCJ,YAAY,CAAC,IAAI,CAAC;IAClB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,WAAW,CAACD,MAAM,EAAEG,CAAC,EAAE,EAAE;MAC3Cb,eAAe,CAACW,WAAW,CAACE,CAAC,CAAC,CAAC;MAC/B,MAAM,IAAIC,OAAO,CAACC,GAAG,IAAIC,UAAU,CAACD,GAAG,EAAEtB,eAAe,CAAC,CAAC;IAC5D;IACAe,YAAY,CAAC,KAAK,CAAC;EACrB;;EAEA;EACAhC,SAAS,CAAC,MAAM;IACd8B,QAAQ,CAAC,EAAE,CAAC;IACZW,KAAK,CAAC,GAAGzB,QAAQ,QAAQ,CAAC,CACvB0B,IAAI,CAAC,MAAMH,GAAG,IAAI;MACjB,IAAI,CAACA,GAAG,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MACrD,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDH,IAAI,CAACI,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAACzB,KAAK,CAAC;MACzCC,QAAQ,CAACwB,IAAI,CAACzB,KAAK,CAAC;MACpB,IAAIyB,IAAI,CAACzB,KAAK,IAAIyB,IAAI,CAACzB,KAAK,CAACa,MAAM,GAAG,CAAC,EAAE;QACvCV,eAAe,CAACsB,IAAI,CAACzB,KAAK,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC,MAAM;QACLS,QAAQ,CAAC,iBAAiB,CAAC;MAC7B;IACF,CAAC,CAAC,CACDmB,KAAK,CAACC,GAAG,IAAI;MACZH,OAAO,CAAClB,KAAK,CAAC,sBAAsB,EAAEqB,GAAG,CAAC;MAC1CpB,QAAQ,CAAC,uBAAuB,GAAGoB,GAAG,CAACC,OAAO,CAAC;MAC/C7B,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAtB,SAAS,CAAC,MAAM;IACd,IAAI,CAACuB,YAAY,EAAE;IACnBK,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IACZW,KAAK,CAAC,GAAGzB,QAAQ,qBAAqBoC,kBAAkB,CAAC7B,YAAY,CAAC,EAAE,CAAC,CACtEmB,IAAI,CAAC,MAAMH,GAAG,IAAI;MACjB,IAAI,CAACA,GAAG,CAACI,EAAE,EAAE;QACX,MAAMU,OAAO,GAAG,MAAMd,GAAG,CAACM,IAAI,CAAC,CAAC,CAACI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClD,MAAM,IAAIL,KAAK,CAACS,OAAO,CAACxB,KAAK,IAAI,6BAA6B,CAAC;MACjE;MACA,OAAOU,GAAG,CAACM,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDH,IAAI,CAACI,IAAI,IAAI;MACZpB,QAAQ,CAACoB,IAAI,CAACrB,KAAK,IAAI,EAAE,CAAC;MAC1BG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDqB,KAAK,CAACC,GAAG,IAAI;MACZpB,QAAQ,CAAC,6BAA6B,GAAGoB,GAAG,CAACC,OAAO,CAAC;MACrDzB,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACL,YAAY,EAAEF,KAAK,CAAC,CAAC;;EAEzB;EACA,SAASiC,gBAAgBA,CAACC,KAAK,EAAE;IAC/B,MAAMC,EAAE,GAAGD,KAAK,CAACE,KAAK,CAAC,gBAAgB,CAAC;IACxC,IAAID,EAAE,EAAE,OAAOE,UAAU,CAACF,EAAE,CAAC,CAAC,CAAC,CAAC;IAChC,MAAMG,EAAE,GAAGJ,KAAK,CAACE,KAAK,CAAC,gBAAgB,CAAC;IACxC,IAAIE,EAAE,EAAE,OAAOD,UAAU,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;IACrC,OAAO,IAAI;EACb;EACA,SAASC,cAAcA,CAACL,KAAK,EAAE;IAC7B,MAAMM,IAAI,GAAG,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IACjC,MAAMC,MAAM,GAAGT,gBAAgB,CAACC,KAAK,CAACS,OAAO,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;IAC7D,IAAID,MAAM,IAAI,IAAI,EAAE,OAAO,IAAI;IAC/B,MAAME,CAAC,GAAG,IAAIH,IAAI,CAACD,IAAI,CAAC;IACxBI,CAAC,CAACC,QAAQ,CAACD,CAAC,CAACE,QAAQ,CAAC,CAAC,GAAGJ,MAAM,CAAC;IACjC,OAAOE,CAAC;EACV;;EAEA;EACA;EACA;EACA;EACA,MAAMG,aAAa,GAAG3C,KAAK,CAAC4C,MAAM,CAACC,EAAE,IACnC,CAAC,qBAAqB,CAACC,IAAI,CAACD,EAAE,CAACE,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,IAC/C,CAAC,sBAAsB,CAACF,IAAI,CAACD,EAAE,CAACE,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,IAChD,CAAC,WAAW,CAACF,IAAI,CAACD,EAAE,CAACE,QAAQ,CAACC,IAAI,CAAC,CAAC,CACtC,CAAC;EACD1B,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC7BD,OAAO,CAACC,GAAG,CAACoB,aAAa,CAAC;EAE1B,MAAMM,SAAS,GAAG;IAChBC,QAAQ,EAAE,CACR;MACEpB,KAAK,EAAE,gBAAgBhC,YAAY,GAAG;MACtCuB,IAAI,EAAEsB,aAAa,CAACQ,GAAG,CAACN,EAAE,KAAK;QAAEO,CAAC,EAAEjB,cAAc,CAACU,EAAE,CAACE,QAAQ,CAAC;QAAEM,CAAC,EAAER,EAAE,CAACS,IAAI;QAAEP,QAAQ,EAAEF,EAAE,CAACE;MAAS,CAAC,CAAC,CAAC;MACtGQ,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,mBAAmB;MAChCC,sBAAsB,EAAE;IAC1B,CAAC;EAEL,CAAC;EAED,oBACEpE,OAAA;IAAKqE,KAAK,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE,WAAW;MAAEC,UAAU,EAAE;IAAa,CAAE;IAAAC,QAAA,gBAC3EzE,OAAA;MAAAyE,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtC9D,KAAK,iBACJf,OAAA;MAAKqE,KAAK,EAAE;QAAES,KAAK,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAG,CAAE;MAAAN,QAAA,gBAC7CzE,OAAA;QAAAyE,QAAA,EAAG;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,KAAC,EAAC9D,KAAK;IAAA;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CACN,EACAtE,KAAK,CAACa,MAAM,KAAK,CAAC,gBACjBpB,OAAA;MAAAyE,QAAA,EAAK;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAE9B7E,OAAA;MAAKqE,KAAK,EAAE;QAAEW,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,GAAG,EAAE,EAAE;QAAEH,YAAY,EAAE;MAAG,CAAE;MAAAN,QAAA,gBAC/EzE,OAAA;QAAAyE,QAAA,GAAO,cACO,EAAC,GAAG,eAChBzE,OAAA;UACEmF,KAAK,EAAE1E,YAAa;UACpB2E,QAAQ,EAAEC,CAAC,IAAI3E,eAAe,CAAC2E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC/Cd,KAAK,EAAE;YAAEkB,QAAQ,EAAE,MAAM;YAAEhB,MAAM,EAAE;UAAS,CAAE;UAC9CiB,QAAQ,EAAEvE,SAAU;UAAAwD,QAAA,EAEnB,CAAC,GAAGlE,KAAK,CAAC,CAACe,IAAI,CAAC,CAAC,CAACwC,GAAG,CAAC2B,IAAI,iBACzBzF,OAAA;YAAmBmF,KAAK,EAAEM,IAAK;YAAAhB,QAAA,EAAEgB;UAAI,GAAxBA,IAAI;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6B,CAC/C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACR7E,OAAA;QACE0F,OAAO,EAAEvE,YAAa;QACtBqE,QAAQ,EAAEvE,SAAS,IAAIV,KAAK,CAACa,MAAM,KAAK,CAAE;QAC1CiD,KAAK,EAAE;UAAEkB,QAAQ,EAAE,MAAM;UAAEI,OAAO,EAAE,UAAU;UAAEC,MAAM,EAAE3E,SAAS,GAAG,aAAa,GAAG;QAAU,CAAE;QAAAwD,QAAA,EAE/FxD,SAAS,GAAG,cAAc,GAAG;MAAe;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EACAhE,OAAO,gBACNb,OAAA;MAAAyE,QAAA,EAAK;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAE3B7E,OAAA,CAACZ,IAAI;MAAC4C,IAAI,EAAE4B,SAAU;MAACiC,OAAO,EAAE;QAC9BC,UAAU,EAAE,IAAI;QAChBC,SAAS,EAAE9E,SAAS,GAAG,KAAK,GAAG+E,SAAS;QACxCC,OAAO,EAAE;UACPC,MAAM,EAAE;YAAElB,OAAO,EAAE;UAAM,CAAC;UAC1BmB,KAAK,EAAE;YAAEnB,OAAO,EAAE;UAAM,CAAC;UACzBoB,OAAO,EAAE;YACPC,SAAS,EAAE;cAAEF,KAAK,EAAEG,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC7C,QAAQ;cAAEjB,KAAK,EAAE+D,IAAI,IAAI,SAASA,IAAI,CAACD,GAAG,CAACvC,CAAC;YAAG;UAC3F;QACF,CAAC;QACDyC,MAAM,EAAE;UACN1C,CAAC,EAAE;YACD2C,IAAI,EAAE,MAAM;YACZC,IAAI,EAAE;cAAEC,IAAI,EAAE,OAAO;cAAEC,cAAc,EAAE;gBAAEC,KAAK,EAAE;cAAW;YAAE,CAAC;YAC9DX,KAAK,EAAE;cAAEnB,OAAO,EAAE,IAAI;cAAE+B,IAAI,EAAE,UAAU;cAAEC,IAAI,EAAE;gBAAEC,IAAI,EAAE;cAAG;YAAE,CAAC;YAC9DC,KAAK,EAAE;cACLC,MAAM,EAAE,MAAM;cACdC,QAAQ,EAAE,KAAK;cACfC,QAAQ,EAAE,SAAAA,CAASC,GAAG,EAAE;gBACtB,MAAM3E,KAAK,GAAGiB,SAAS,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC7B,IAAI,CAACuF,IAAI,CAACpE,CAAC,IAAIA,CAAC,CAACY,CAAC,CAACyD,OAAO,CAAC,CAAC,KAAK,IAAIxE,IAAI,CAACsE,GAAG,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC;gBAC7F,OAAO7E,KAAK,GAAGA,KAAK,CAACe,QAAQ,GAAG,EAAE;cACpC,CAAC;cACD+D,WAAW,EAAE,EAAE;cACfC,WAAW,EAAE;YACf,CAAC;YACDC,IAAI,EAAE;cACJ3C,OAAO,EAAE,IAAI;cACb4C,SAAS,EAAE,IAAI;cACfzD,WAAW,EAAE,aAAa;cAAE;cAC5BW,KAAK,EAAE,aAAa;cAAI;cACxB+C,SAAS,EAAE,SAAS,CAAE;YACxB,CAAC;YACDC,GAAG,EAAE,IAAI9E,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;YACzB+E,GAAG,EAAEjF,cAAc,CAAC,EAAAxC,cAAA,GAAAgD,aAAa,CAACA,aAAa,CAAClC,MAAM,GAAC,CAAC,CAAC,cAAAd,cAAA,uBAArCA,cAAA,CAAuCoD,QAAQ,KAAI,EAAG;UAC5E,CAAC;UACDM,CAAC,EAAE;YACDgE,WAAW,EAAE,IAAI;YACjBF,GAAG,EAAE,CAAC;YACNC,GAAG,EAAE,GAAG;YACR5B,KAAK,EAAE;cAAEnB,OAAO,EAAE,IAAI;cAAE+B,IAAI,EAAE,mBAAmB;cAAEC,IAAI,EAAE;gBAAEC,IAAI,EAAE;cAAG;YAAE,CAAC;YACvEU,IAAI,EAAE;cACJ3C,OAAO,EAAE,IAAI;cACb4C,SAAS,EAAE,IAAI;cACfzD,WAAW,EAAE,aAAa;cAAE;cAC5BW,KAAK,EAAE,aAAa;cAAI;cACxB+C,SAAS,EAAE,SAAS,CAAE;YACxB;UACF;QACF;MACF;IAAE;MAAAnD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxE,EAAA,CAxMQD,GAAG;AAAA6H,EAAA,GAAH7H,GAAG;AA0MZ,eAAeA,GAAG;AAAC,IAAA6H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/tomkwong/CascadeProjects/yield-curve-viewer/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst API_BASE = 'http://localhost:4000/api';\nfunction App() {\n  _s();\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [curve, setCurve] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Fetch dates\n  useEffect(() => {\n    setError('');\n    fetch(`${API_BASE}/dates`).then(async res => {\n      if (!res.ok) throw new Error('Failed to fetch dates');\n      return res.json();\n    }).then(data => {\n      console.log('Fetched dates:', data.dates);\n      setDates(data.dates);\n      if (data.dates && data.dates.length > 0) {\n        setSelectedDate(data.dates[0]);\n      } else {\n        setError('No dates found.');\n      }\n    }).catch(err => {\n      console.error('Error loading dates:', err);\n      setError('Error loading dates: ' + err.message);\n      setDates([]);\n    });\n  }, []);\n\n  // Fetch curve for selected date\n  useEffect(() => {\n    if (!selectedDate) return;\n    setLoading(true);\n    setError('');\n    fetch(`${API_BASE}/yield-curve?date=${encodeURIComponent(selectedDate)}`).then(async res => {\n      if (!res.ok) {\n        const errJson = await res.json().catch(() => ({}));\n        throw new Error(errJson.error || 'Failed to fetch yield curve');\n      }\n      return res.json();\n    }).then(data => {\n      setCurve(data.curve || []);\n      setLoading(false);\n    }).catch(err => {\n      setError('Error loading yield curve: ' + err.message);\n      setCurve([]);\n      setLoading(false);\n    });\n  }, [selectedDate, dates]);\n\n  // Helper to parse maturity label to months\n  function maturityToMonths(label) {\n    let l = label.trim().replace(/Month/i, 'Mo');\n    if (/Mo/i.test(l)) {\n      // e.g. \"6 Mo\", \"1.5 Mo\"\n      return parseFloat(l) || 0;\n    } else if (/YR/i.test(l)) {\n      // e.g. \"2 YR\"\n      return (parseFloat(l) || 0) * 12;\n    }\n    return 0;\n  }\n\n  // Accept all case/spacing variants for allowed maturities\n  const allowedMaturities = [\"6 Mo\", \"2 Yr\", \"5 Yr\", \"10 Yr\", \"20 Yr\", \"30 Yr\"];\n  function normalizeMaturity(label) {\n    return label.replace(/month/i, 'mo').replace(/yr/i, 'yr').replace(/\\s+/g, ' ').trim().toLowerCase();\n  }\n  // For each allowed maturity, find the rate (if available), otherwise use null\n  const allowedPoints = allowedMaturities.map(label => {\n    const norm = normalizeMaturity(label);\n    const pt = curve.find(p => normalizeMaturity(p.maturity) === norm);\n    return {\n      x: label,\n      // use string label for category axis\n      y: pt ? pt.rate : null,\n      label\n    };\n  });\n  // Only plot points with a y value\n  const points = allowedPoints.filter(pt => pt.y != null);\n  const chartData = {\n    datasets: [{\n      label: `Yield Curve (${selectedDate})`,\n      data: points,\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1,\n      showLine: true,\n      pointRadius: 5\n    }]\n  };\n\n  // Chart.js v4 plugin to force custom x-axis ticks at allowed maturities\n  const forcedXTicksPlugin = {\n    id: 'forcedXTicks',\n    beforeInit: chart => {\n      const xAxis = chart.options.scales.x;\n      xAxis.ticks = xAxis.ticks || {};\n      xAxis.ticks.autoSkip = false;\n      xAxis.ticks.callback = function (value) {\n        return monthsToLabel[value] || '';\n      };\n      xAxis.min = minX;\n      xAxis.max = maxX;\n    },\n    afterBuildTicks: chart => {\n      const xScale = chart.scales.x;\n      if (xScale) {\n        // Overwrite the ticks to be exactly our allowed maturities\n        xScale.ticks = tickVals.map(val => ({\n          value: val,\n          label: monthsToLabel[val]\n        }));\n        xScale._ticks = xScale.ticks; // for Chart.js internal compatibility\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 700,\n      margin: '40px auto',\n      fontFamily: 'sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"US Treasury Yield Curve Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), dates.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No dates available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Date:\", ' ', /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value),\n        style: {\n          fontSize: '1rem',\n          margin: '0 10px'\n        },\n        children: dates.map(date => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: date,\n          children: date\n        }, date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          title: {\n            display: true,\n            text: 'Yield Curve'\n          }\n        },\n        scales: {\n          x: {\n            type: 'category',\n            title: {\n              display: true,\n              text: 'Maturity',\n              font: {\n                size: 14\n              }\n            },\n            labels: allowedMaturities,\n            ticks: {\n              autoSkip: false,\n              maxRotation: 0,\n              minRotation: 0\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'Treasury Par Rate',\n              font: {\n                size: 14\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MLaeS8zrPFodOrawl5KgVJ1i2WI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","API_BASE","App","_s","dates","setDates","selectedDate","setSelectedDate","curve","setCurve","loading","setLoading","error","setError","fetch","then","res","ok","Error","json","data","console","log","length","catch","err","message","encodeURIComponent","errJson","maturityToMonths","label","l","trim","replace","test","parseFloat","allowedMaturities","normalizeMaturity","toLowerCase","allowedPoints","map","norm","pt","find","p","maturity","x","y","rate","points","filter","chartData","datasets","fill","borderColor","tension","showLine","pointRadius","forcedXTicksPlugin","id","beforeInit","chart","xAxis","options","scales","ticks","autoSkip","callback","value","monthsToLabel","min","minX","max","maxX","afterBuildTicks","xScale","tickVals","val","_ticks","style","maxWidth","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","color","marginBottom","onChange","e","target","fontSize","date","responsive","plugins","legend","position","title","display","text","type","font","size","labels","maxRotation","minRotation","beginAtZero","_c","$RefreshReg$"],"sources":["/Users/tomkwong/CascadeProjects/yield-curve-viewer/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst API_BASE = 'http://localhost:4000/api';\n\nfunction App() {\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [curve, setCurve] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Fetch dates\n  useEffect(() => {\n    setError('');\n    fetch(`${API_BASE}/dates`)\n      .then(async res => {\n        if (!res.ok) throw new Error('Failed to fetch dates');\n        return res.json();\n      })\n      .then(data => {\n        console.log('Fetched dates:', data.dates);\n        setDates(data.dates);\n        if (data.dates && data.dates.length > 0) {\n          setSelectedDate(data.dates[0]);\n        } else {\n          setError('No dates found.');\n        }\n      })\n      .catch(err => {\n        console.error('Error loading dates:', err);\n        setError('Error loading dates: ' + err.message);\n        setDates([]);\n      });\n  }, []);\n\n  // Fetch curve for selected date\n  useEffect(() => {\n    if (!selectedDate) return;\n    setLoading(true);\n    setError('');\n    fetch(`${API_BASE}/yield-curve?date=${encodeURIComponent(selectedDate)}`)\n      .then(async res => {\n        if (!res.ok) {\n          const errJson = await res.json().catch(() => ({}));\n          throw new Error(errJson.error || 'Failed to fetch yield curve');\n        }\n        return res.json();\n      })\n      .then(data => {\n        setCurve(data.curve || []);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError('Error loading yield curve: ' + err.message);\n        setCurve([]);\n        setLoading(false);\n      });\n  }, [selectedDate, dates]);\n\n  // Helper to parse maturity label to months\n  function maturityToMonths(label) {\n    let l = label.trim().replace(/Month/i, 'Mo');\n    if (/Mo/i.test(l)) {\n      // e.g. \"6 Mo\", \"1.5 Mo\"\n      return parseFloat(l) || 0;\n    } else if (/YR/i.test(l)) {\n      // e.g. \"2 YR\"\n      return (parseFloat(l) || 0) * 12;\n    }\n    return 0;\n  }\n\n  // Accept all case/spacing variants for allowed maturities\n  const allowedMaturities = [\n    \"6 Mo\", \"2 Yr\", \"5 Yr\", \"10 Yr\", \"20 Yr\", \"30 Yr\"\n  ];\n  function normalizeMaturity(label) {\n    return label.replace(/month/i, 'mo').replace(/yr/i, 'yr').replace(/\\s+/g, ' ').trim().toLowerCase();\n  }\n  // For each allowed maturity, find the rate (if available), otherwise use null\n  const allowedPoints = allowedMaturities.map(label => {\n    const norm = normalizeMaturity(label);\n    const pt = curve.find(p => normalizeMaturity(p.maturity) === norm);\n    return {\n      x: label, // use string label for category axis\n      y: pt ? pt.rate : null,\n      label\n    };\n  });\n  // Only plot points with a y value\n  const points = allowedPoints.filter(pt => pt.y != null);\n\n  const chartData = {\n    datasets: [\n      {\n        label: `Yield Curve (${selectedDate})`,\n        data: points,\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1,\n        showLine: true,\n        pointRadius: 5,\n      },\n    ],\n  };\n\n\n  // Chart.js v4 plugin to force custom x-axis ticks at allowed maturities\n  const forcedXTicksPlugin = {\n    id: 'forcedXTicks',\n    beforeInit: (chart) => {\n      const xAxis = chart.options.scales.x;\n      xAxis.ticks = xAxis.ticks || {};\n      xAxis.ticks.autoSkip = false;\n      xAxis.ticks.callback = function(value) {\n        return monthsToLabel[value] || '';\n      };\n      xAxis.min = minX;\n      xAxis.max = maxX;\n    },\n    afterBuildTicks: (chart) => {\n      const xScale = chart.scales.x;\n      if (xScale) {\n        // Overwrite the ticks to be exactly our allowed maturities\n        xScale.ticks = tickVals.map(val => ({ value: val, label: monthsToLabel[val] }));\n        xScale._ticks = xScale.ticks; // for Chart.js internal compatibility\n      }\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: 700, margin: '40px auto', fontFamily: 'sans-serif' }}>\n      <h2>US Treasury Yield Curve Viewer</h2>\n      {error && (\n        <div style={{ color: 'red', marginBottom: 16 }}>\n          <b>Error:</b> {error}\n        </div>\n      )}\n      {dates.length === 0 ? (\n        <div>No dates available.</div>\n      ) : (\n        <label>\n          Select Date:{' '}\n          <select\n            value={selectedDate}\n            onChange={e => setSelectedDate(e.target.value)}\n            style={{ fontSize: '1rem', margin: '0 10px' }}\n          >\n            {dates.map(date => (\n              <option key={date} value={date}>{date}</option>\n            ))}\n          </select>\n        </label>\n      )}\n      {loading ? (\n        <div>Loading chart...</div>\n      ) : (\n        <Line data={chartData} options={{\n          responsive: true,\n          plugins: {\n            legend: { position: 'top' },\n            title: { display: true, text: 'Yield Curve' },\n          },\n          scales: {\n            x: {\n              type: 'category',\n              title: {\n                display: true,\n                text: 'Maturity',\n                font: { size: 14 }\n              },\n              labels: allowedMaturities,\n              ticks: {\n                autoSkip: false,\n                maxRotation: 0,\n                minRotation: 0,\n              }\n            },\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Treasury Par Rate',\n                font: { size: 14 }\n              }\n            }\n          }\n        }} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}